package com.android.base.bit;

/**
 * @author : Jakarta
 * @version :
 * @Date : 7/19/20 10:12 PM
 * @Desc : int 的高字节与低字节
 * 计算机存储数据是二进制形式，二进制每8位为一个字节，
 * 如你的例子：
 * 十进制     二进制
 * 41715     1010 0010 1111 0011
 * 十六进制 A2F3
 * 最右边的是最低位，标记为第0位，向左边一位是第1位，这样一直到这个数据的第15位。
 * 第0～7位11110011是这个数据的低位字节(因其包含的所有位号均小于其他字节)，10100010是高位字节(8~15位)。
 *
 * 计算机存储最小单位是字节，存储顺序(小端模式)为低位字节在前、高位在后：
 * 11110011，10100010即十六进制标记为F3，A2两个字节。
 * 计算机在读取这两个字节到整形变量时也会自动将F3装载到变量的0～7位，
 * 而将A2装载到高位字节的。这是一种约定，由于存在两种模式，即大端模式和小端模式，
 * 以上这种先存低位字节的叫小端模式，大端模式则先保存高位字节，如果你遇到大端模式的CPU和操作系统，
 * 那么你的数据就会保存成A2，F3了。
 */
public class Int {
    public static void main(String[] args) {
        System.out.println("1<<30 ： "+(1<<30));

    }

}
